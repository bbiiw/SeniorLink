version: '3'

services:
  backend:
    build:
      context: ./backend  # เส้นทางไปยังโฟลเดอร์ backend
      dockerfile: Dockerfile  # ชื่อไฟล์ Dockerfile
    container_name: backend
    volumes:
      - ./backend:/code  # ใช้ในการพัฒนาเพื่อแมพไฟล์โค้ด
    ports:
      - "8000:8000"  # Django API จะเข้าถึงได้ที่พอร์ต 8000
    env_file:
      - ./backend/.env  # ตรวจสอบว่าไฟล์ .env มีอยู่ในตำแหน่งที่ถูกต้อง
    networks:
      - mynetwork
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend  # เส้นทางไปยังโฟลเดอร์ frontend
      dockerfile: Dockerfile  # ชื่อไฟล์ Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"  # React frontend จะเข้าถึงได้ที่พอร์ต 3000
    networks:
      - mynetwork
    depends_on:
      - backend

  db:
    image: postgres
    container_name: db
    environment:
      POSTGRES_DB: senior_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - mynetwork

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 1234
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - mynetwork
    volumes:
      - pgadmin_data:/var/lib/pgadmin

networks:
  mynetwork:  # ใช้ network เดียวกัน
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
